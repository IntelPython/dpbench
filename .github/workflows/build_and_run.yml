name: build and run

on:
  pull_request:
  push:
    branches: [main]

jobs:
  build_linux:
    name: Builds dpbench and runs the benchmarks
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python: ["3.8", "3.9"]

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout dpbench
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python }}
          activate-environment: dpbench-devel

      - name: Conda info
        shell: bash -l {0}
        run: conda info

      - name: Install dpbench dependencies
        shell: bash -l {0}
        run: |
          conda install tbb=2021.6.0 dpcpp_linux-64 -c intel
          conda install numpy numba cython cmake ninja scikit-build conda-forge::gtest conda-forge::gmock pytest
          conda install scipy spirv-tools scikit-learn pybind11
          conda install -c dppy/label/dev dpctl=0.13.0 numba-dpex
          conda list

      - name: Build dpbench
        shell: bash -l {0}
        run: |
          CC=icx CXX=icpx python setup.py develop -- -Dpybind11_DIR=$(python -m pybind11 --cmakedir) -DDPCTL_MODULE_PATH=$(python -m dpctl --cmakedir)

      - name: Validate dpbench
        shell: bash -l {0}
        run: |
          export OCL_ICD_FILENAMES=libintelocl.so
          python -c "import dpbench; dpbench.run_benchmarks(\"black_scholes\")" || exit 1
          python -c "import dpbench; dpbench.all_benchmarks_passed_validation(\"dpbench.db\");"
          res=`                                                                    \
            printf "%s"                                                            \
            "$(python -c "import dpbench;                                          \
                res=int(dpbench.all_benchmarks_passed_validation(\"dpbench.db\")); \
                print(\"Validation:\",res)"                                        \
              )" | grep Validation | cut -f 2 -d ":"` || exit 1
          if [ ${res} == 0 ]; then exit 1; fi
